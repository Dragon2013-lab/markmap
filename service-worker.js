const a=location.pathname.split("/").slice(0,-1).join("/"),u=[a+"/_app/immutable/entry/app.0w1h6hak.js",a+"/_app/immutable/nodes/0.DUlJbD5B.js",a+"/_app/immutable/assets/0.Dq_W_4qU.css",a+"/_app/immutable/nodes/1.B9HK4TAK.js",a+"/_app/immutable/assets/1.SXLily6A.css",a+"/_app/immutable/nodes/2.CCQyFOM4.js",a+"/_app/immutable/nodes/3.Z4SJG6uD.js",a+"/_app/immutable/nodes/4.C9yrE9x7.js",a+"/_app/immutable/nodes/5.DcTwgRp_.js",a+"/_app/immutable/nodes/6.De2FZtKS.js",a+"/_app/immutable/nodes/7.Dxmx8Uhp.js",a+"/_app/immutable/nodes/8.CQsXnt5j.js",a+"/_app/immutable/chunks/_commonjsHelpers.Cpj98o6Y.js",a+"/_app/immutable/chunks/common.B4zroDqL.js",a+"/_app/immutable/chunks/debounce.__0a3ghF.js",a+"/_app/immutable/chunks/entry.g5rvfU0H.js",a+"/_app/immutable/chunks/footer.CzY5_SyX.js",a+"/_app/immutable/chunks/globals.D0QH3NT1.js",a+"/_app/immutable/chunks/index.DE-p3i9-.js",a+"/_app/immutable/chunks/index.F5GFYZyK.js",a+"/_app/immutable/chunks/js-yaml.mbYHt68G.js",a+"/_app/immutable/chunks/loader.DWONAiK-.js",a+"/_app/immutable/chunks/markmap.DXR8Q0LC.js",a+"/_app/immutable/chunks/preload-helper.D6kgxu3v.js",a+"/_app/immutable/chunks/scheduler.CHOKrCaR.js",a+"/_app/immutable/chunks/stores.udfXf1zk.js",a+"/_app/immutable/chunks/toast.CIGbqCUP.js",a+"/_app/immutable/assets/toolbar.CgvstNA6.css",a+"/_app/immutable/chunks/toolbar.faFJYkX4.js",a+"/_app/immutable/entry/start.Cu2s7xhs.js",a+"/_app/immutable/chunks/buttons.esm.Bog6bH3O.js",a+"/_app/immutable/chunks/index.BLsoE-5D.js",a+"/_app/immutable/chunks/index.DRWmbcXV.js",a+"/_app/immutable/chunks/faq.Chw567Oz.js",a+"/_app/immutable/chunks/json-options.BTmTZagf.js",a+"/_app/immutable/chunks/magic-comments.Dv48Zb3t.js",a+"/_app/immutable/chunks/markmap.BwYsdQ9y.js",a+"/_app/immutable/chunks/packages--coc-markmap.AHDe9Q9U.js",a+"/_app/immutable/chunks/packages--markmap-cli.BqYE9tak.js",a+"/_app/immutable/chunks/packages--markmap-lib.DuPyiE3C.js",a+"/_app/immutable/chunks/packages--markmap-render.LKbNPjla.js",a+"/_app/immutable/chunks/packages--markmap-toolbar.CbAADZq1.js",a+"/_app/immutable/chunks/packages--markmap-view.CpJm1q_C.js",a+"/_app/immutable/chunks/codemirror.BelXc4t7.js",a+"/_app/immutable/assets/codemirror.CwxH9GCU.css"],l=[a+"/.nojekyll",a+"/.well-known/brave-rewards-verification.txt",a+"/favicon.png",a+"/logo-192.png",a+"/logo-512.png",a+"/manifest.json"],n="1718345236234",c=`cache${n}`,i=u.concat(l),o=new Set(i);self.addEventListener("install",s=>{s.waitUntil(caches.open(c).then(e=>e.addAll(i)).then(()=>{self.skipWaiting()}))});self.addEventListener("activate",s=>{s.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==c&&await caches.delete(t);self.clients.claim()}))});self.addEventListener("fetch",s=>{if(s.request.method!=="GET"||s.request.headers.has("range"))return;const e=new URL(s.request.url);if(e.protocol.startsWith("http")&&!(e.hostname===self.location.hostname&&e.port!==self.location.port)){if(e.host===self.location.host&&o.has(e.pathname)){s.respondWith(caches.match(s.request,{ignoreSearch:!0}));return}s.request.cache!=="only-if-cached"&&[self.location.host,"cdn.jsdelivr.net"].includes(e.host)&&s.respondWith(caches.open(`offline${n}`).then(async t=>{try{const p=await fetch(s.request);return t.put(s.request,p.clone()),p}catch(p){const m=await t.match(s.request);if(m)return m;throw p}}))}});
